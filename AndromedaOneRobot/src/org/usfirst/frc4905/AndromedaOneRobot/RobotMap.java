// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc4905.AndromedaOneRobot;

import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap
{
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	public static SpeedController myDriveTrainRightMotor_Controller;
	public static SpeedController myDriveTrainLeftMotor_Controller;
	public static RobotDrive myDriveTrainmyRobotDrive;
	public static SpeedController armPlatformPlatformMotor_Controller;
	public static AnalogChannel armPlatformPlatformPot;
	public static SpeedController robotArmsArmsMotor_Controller;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	public static AnalogChannel robotArmsPot;

	public static void init()
	{
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
		myDriveTrainRightMotor_Controller = new Victor(1, 1);
		LiveWindow.addActuator("myDriveTrain", "RightMotor_Controller",
				(Victor) myDriveTrainRightMotor_Controller);

		myDriveTrainLeftMotor_Controller = new Victor(1, 5);
		LiveWindow.addActuator("myDriveTrain", "LeftMotor_Controller",
				(Victor) myDriveTrainLeftMotor_Controller);

		myDriveTrainmyRobotDrive = new RobotDrive(
				myDriveTrainLeftMotor_Controller,
				myDriveTrainRightMotor_Controller);

		myDriveTrainmyRobotDrive.setSafetyEnabled(false);
		myDriveTrainmyRobotDrive.setExpiration(0.1);
		myDriveTrainmyRobotDrive.setSensitivity(0.5);
		myDriveTrainmyRobotDrive.setMaxOutput(1.0);

		armPlatformPlatformMotor_Controller = new Jaguar(1, 3);
		LiveWindow.addActuator("ArmPlatform", "PlatformMotor_Controller",
				(Jaguar) armPlatformPlatformMotor_Controller);

		armPlatformPlatformPot = new AnalogChannel(1, 1);
		LiveWindow.addSensor("ArmPlatform", "PlatformPot",
				armPlatformPlatformPot);

		robotArmsArmsMotor_Controller = new Jaguar(1, 4);
		LiveWindow.addActuator("RobotArms", "ArmsMotor_Controller",
				(Jaguar) robotArmsArmsMotor_Controller);

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
		robotArmsPot = new AnalogChannel(1, 2);
		LiveWindow.addSensor("RobotArms", "robotArmsPot", robotArmsPot);
	}
}
